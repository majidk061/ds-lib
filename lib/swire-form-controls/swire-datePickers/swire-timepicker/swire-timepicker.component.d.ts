import { OnInit, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NgbDateStruct, NgbCalendar, NgbDate, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export declare class SwireTimepickerComponent implements OnInit, ControlValueAccessor {
    private calendar;
    i18n: NgbDatepickerI18n;
    private _eref;
    swireDynamicHours: any;
    swireDynamicMinutes: any;
    myDatePicker: any;
    myCalender: any;
    disabled: boolean;
    swireDynamicClassName: string;
    swireDynamicIconClass: string;
    swireDynamicColorClass: string;
    swireDynamicSizeClass: string;
    label: string;
    swireDynamicMinDate: any;
    swireDynamicMaxDate: any;
    swireDynamicStartDate: any;
    displayMonths: any;
    model: NgbDateStruct;
    date: {
        year: number;
        month: number;
    };
    firstDayOfWeek: any;
    time: any;
    onTouch: any;
    touched: boolean;
    onChange: (szValue: any) => void;
    onTouched: () => void;
    writeValue(obj: any): void;
    markAsTouched(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onChangeHandler(e: any): void;
    setDisabledState?(isDisabled: boolean): void;
    dateValueChanged(): void;
    constructor(calendar: NgbCalendar, i18n: NgbDatepickerI18n, _eref: ElementRef);
    ngOnInit(): void;
    onInput(): void;
    cancel(): void;
    submit(): void;
    onDateSelection(date: NgbDate): void;
    callfunction(event: any): void;
    onClick(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SwireTimepickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SwireTimepickerComponent, "swire-timepicker", never, { "swireDynamicHours": "swireDynamicHours"; "swireDynamicMinutes": "swireDynamicMinutes"; "disabled": "disabled"; "swireDynamicClassName": "swireDynamicClassName"; "swireDynamicIconClass": "swireDynamicIconClass"; "swireDynamicColorClass": "swireDynamicColorClass"; "swireDynamicSizeClass": "swireDynamicSizeClass"; "label": "label"; "swireDynamicMinDate": "swireDynamicMinDate"; "swireDynamicMaxDate": "swireDynamicMaxDate"; "swireDynamicStartDate": "swireDynamicStartDate"; "displayMonths": "displayMonths"; "firstDayOfWeek": "firstDayOfWeek"; }, {}, never, never>;
}
