import { ElementRef, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export declare class SwireRangeDatepickerComponent implements OnInit, ControlValueAccessor {
    calendar: NgbCalendar;
    myDatePicker: ElementRef | undefined;
    swireDynamicDatePlaceholder: string;
    swireDynamicClassName: string;
    swireDynamicIconClass: string;
    swireDynamicColorClass: string;
    swireDynamicSizeClass: string;
    label: string;
    swireDynamicMinDate: any;
    swireDynamicMaxDate: any;
    swireDynamicStartDate: any;
    isDisabled: boolean;
    markDisabled: any;
    firstDayOfWeek: any;
    range: any;
    showHideCal: boolean;
    hoveredDate: NgbDate;
    disabled: boolean;
    fromDate: NgbDate;
    toDate: NgbDate;
    nullVal: any;
    onChange: any;
    onTouch: any;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    dateValueChanged(): void;
    constructor(calendar: NgbCalendar);
    ngOnInit(): void;
    onDateSelection(date: NgbDate): void;
    isHovered(date: NgbDate): boolean;
    isInside(date: NgbDate): boolean;
    isRange(date: NgbDate): boolean;
    formatRange(fromDate: NgbDate, toDate: NgbDate): string;
    showHideDate(): void;
    onChangeHandler(e: any): void;
    onTouched: () => void;
    touched: boolean;
    markAsTouched(): void;
    callFromParent(): void;
    removeRange(): void;
    selectCurrentDate(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SwireRangeDatepickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SwireRangeDatepickerComponent, "swire-range-datepicker", never, { "swireDynamicDatePlaceholder": "swireDynamicDatePlaceholder"; "swireDynamicClassName": "swireDynamicClassName"; "swireDynamicIconClass": "swireDynamicIconClass"; "swireDynamicColorClass": "swireDynamicColorClass"; "swireDynamicSizeClass": "swireDynamicSizeClass"; "label": "label"; "swireDynamicMinDate": "swireDynamicMinDate"; "swireDynamicMaxDate": "swireDynamicMaxDate"; "swireDynamicStartDate": "swireDynamicStartDate"; "isDisabled": "isDisabled"; "markDisabled": "markDisabled"; "firstDayOfWeek": "firstDayOfWeek"; "range": "range"; "showHideCal": "showHideCal"; }, {}, never, never>;
}
