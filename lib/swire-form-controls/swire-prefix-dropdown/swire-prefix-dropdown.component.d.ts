import { ElementRef, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class SwirePrefixDropdownComponent implements OnInit, ControlValueAccessor {
    private _eref;
    myInput: any;
    currencyDiv: ElementRef | undefined;
    dataList: ElementRef | undefined;
    swireDynamicClassName: string;
    swireDynamicCurrencyFilterData: any;
    swireDynamicFilterByName: any;
    swireDynamicDropDownOrText: boolean;
    swireDynamicIsPrefixDropDown: boolean;
    selectedCurrencyName: string;
    showFocus: boolean;
    filterdata: any;
    showCurrencyData: boolean;
    priceValue: any;
    disableSwireCurrencyDropdown: boolean;
    disableSwireCurrencyInput: boolean;
    szValue: any;
    touched: boolean;
    disabled: boolean;
    onChange: (szValue: any) => void;
    onTouched: () => void;
    onChangeHandler(e: any): void;
    writeValue(szValue: any): void;
    registerOnChange(onChange: any): void;
    registerOnTouched(onTouched: any): void;
    markAsTouched(): void;
    setDisabledState(disabled: boolean): void;
    onKeyDown(e: any): void;
    onKeyPress(e: any): void;
    constructor(_eref: ElementRef);
    ngOnInit(): void;
    selectedVal(val: any): void;
    showHideDropdaownData(): void;
    focusIn(): void;
    focusOut(): void;
    onClick(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SwirePrefixDropdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SwirePrefixDropdownComponent, "swire-prefix-dropdown", never, { "swireDynamicClassName": "swireDynamicClassName"; "swireDynamicCurrencyFilterData": "swireDynamicCurrencyFilterData"; "swireDynamicFilterByName": "swireDynamicFilterByName"; "swireDynamicDropDownOrText": "swireDynamicDropDownOrText"; "swireDynamicIsPrefixDropDown": "swireDynamicIsPrefixDropDown"; "selectedCurrencyName": "selectedCurrencyName"; "disableSwireCurrencyDropdown": "disableSwireCurrencyDropdown"; "disableSwireCurrencyInput": "disableSwireCurrencyInput"; }, {}, never, never>;
}
